{"version":3,"sources":["Components/Header/header.js","Components/Banner/banner.js","Components/SearchBar/searchBar.js","Components/Results/results.js","Components/Nominations/nominations.js","Components/AddedNomination/addedNomination.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","onClick","this","props","showNominations","src","alt","nominatedMovieslength","Component","Banner","API_URL","API_KEY","MOVIE_ATTRIBUTE","SearchBar","state","userSearch","updateResults","e","preventDefault","updateUserSearch","value","target","trim","setState","resetCurrentPage","getMovies","axios","get","page","then","data","console","log","Error","updateErrorMessage","updateMovies","getTotalResults","totalResults","Search","prevProps","onSubmit","type","name","onChange","placeholder","Results","checkIfMovieNominated","movieImbID","i","nominatedMovies","length","movies","style","backgroundColor","borderColor","color","map","movie","Poster","Title","Year","imdbID","id","nominateMovie","currentPage","prevPage","totalPages","nextPage","errorMessage","Nominations","movieRemoved","removeMovie","movieID","movieName","movieYear","setTimeout","showNominationsComponent","AddedNominations","recentlyNominated","closeNominationConfirmation","App","maxmimumNominationsReached","prevState","nominationConfirmation","document","getElementsByClassName","display","movieImbdID","movieTitle","moviePoster","updatednominatedMovies","push","disableButton","localStorage","removeItem","setItem","JSON","stringify","getIndexOfMovie","splice","enableButton","buttonID","getElementById","disabled","intTotalResults","parseInt","remainder","newMovies","newErrorMessage","getItem","parse","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.ad621028.chunk.js","sourcesContent":["import React, { Component } from 'react'; \nimport './headerStyle.css';\n\n\nclass Header extends Component{\n    \n    render(){\n        return(\n            <div className=\"header\">\n\n               <div className=\"logo-name-div\">\n                    <h1 className=\"logo-name\">THE SHOPPIES</h1>\n               </div>\n               \n                <div className=\"nomination-view\">\n                   \n                    <h2 className=\"nomination-text\" onClick={this.props.showNominations}>NOMINATIONS</h2>\n                    <img className=\"logo-image\" src=\"images/shopify-logo.png\" onClick={this.props.showNominations} alt=\"Offical Sponsor\"></img>\n                    <div className=\"circle\">{this.props.nominatedMovieslength}</div>\n\n                </div>\n\n            </div>            \n        )\n    }\n\n}\n\nexport default Header;\n\n","import React, { Component } from 'react';\nimport './bannerStyle.css'; \n\nclass Banner extends Component{\n    render(){\n        return(\n            <div className=\"banner\"> \n                <h4 className=\"banner-message\">YOU HAVE NOMINATED THE MAXIMUM AMOUNT OF MOVIES!</h4>\n            </div>\n        )\n    }\n}\n\nexport default Banner;","import React, { Component } from 'react'; \nimport axios from 'axios';\nimport './searchBarStyle.css';\n\nconst API_URL = 'https://www.omdbapi.com/'; \nconst API_KEY = '1999d2f8';\nconst MOVIE_ATTRIBUTE = \"type=movie\"; \n\nclass SearchBar extends Component{\n\n    state = {\n\n        userSearch: ''\n\n    }\n\n    updateResults = (e) =>{\n        \n        e.preventDefault();\n       \n    }\n\n    componentDidUpdate(prevProps){\n        if (prevProps.page !== this.props.page){\n            this.getMovies();\n        }\n       \n    }\n\n\n    updateUserSearch = (e) =>{\n        \n        let value = e.target.value.trim();\n\n        if(value !== '' && value !== ' '){\n            this.setState({\n                userSearch: e.target.value.trim()\n            });\n            this.props.resetCurrentPage() \n            this.getMovies();\n        }\n\n    }\n\n    getMovies = () => {\n        axios.get(`${API_URL}?apikey=${API_KEY}&${MOVIE_ATTRIBUTE}&s=${this.state.userSearch}&page=${this.props.page}`)\n            .then(({ data }) =>{\n                console.log(data)\n                if(data.Error){\n                    this.props.updateErrorMessage(data.Error);\n                    this.props.updateMovies([], this.state.userSearch);\n                }else{\n                    this.props.getTotalResults(data.totalResults);\n                    this.props.updateMovies(data.Search, this.state.userSearch);\n                }\n             \n            })\n    }\n\n    render(){\n      \n        return(\n            <div className=\"searchBar\">\n\n                <form onSubmit={this.updateResults}>\n                    <input className=\"search-bar\" type=\"text\" name=\"search\" onChange={this.updateUserSearch} placeholder=\"Search for a Movie\"></input>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default SearchBar;","import React, { Component } from 'react'; \nimport './resultsStyle.css';\n\nclass Results extends Component{\n   \n    \n    checkIfMovieNominated = (movieImbID) =>{\n        for(let i = 0; i < this.props.nominatedMovies.length; i++){\n            if (this.props.nominatedMovies[i][0] === movieImbID){\n                return true;\n            }\n        }\n        return false;\n    }\n    render(){\n        \n        let movies = this.props.movies;\n        \n        const style = {\n            backgroundColor: \"#3C333C\", \n            borderColor: \"#3C333C\",\n            color: \"white\"\n        }\n    \n        return(\n            <div className=\"results\">\n                \n                {\n                    movies.length > 0 ? \n                    <div>\n                    <div className=\"movie-list\">\n                      \n                        <h1 className=\"results-message\">Results for \"{this.props.userSearch}\"</h1>\n                        <br></br>\n                        \n                            {movies.map(movie => \n\n                                <div className=\"movie-item\">\n                                    <img className=\"movie-poster\" key={movie.Poster} src={movie.Poster} alt={movie.Title}></img>\n                                    <h2 className=\"movie-name\" key={movie.imdbID}>{movie.Title} ({movie.Year})</h2>\n                                    <button key={movie.Title} style={this.checkIfMovieNominated(movie.imdbID) ? style : null}id={movie.imdbID} className=\"movie-button\" onClick={e => this.props.nominateMovie(movie.imdbID, movie.Title, movie.Year, movie.Poster)}>Nominate</button>\n                                </div>\n\n                            )}\n\n                    </div> \n                    <div className=\"buttons\">\n                        <button className={this.props.currentPage === 1 ? \"disable\" : \"prev-next-button\"} onClick={e => this.props.prevPage()}>Previous</button>\n                        <button className={this.props.currentPage === this.props.totalPages ? \"disable\" : \"prev-next-button\"} onClick={e => this.props.nextPage()}>Next</button>\n                    </div>\n                    </div>\n                 :  \n                    <h1 className=\"error-messages\">{this.props.errorMessage ? this.props.errorMessage + \" Please try again!\"  :  null}</h1>\n\n                }\n\n            </div>\n        )\n    }\n}\n\nexport default Results;","import React, { Component } from 'react'; \nimport './nominationsStyle.css'; \n\nclass Nominations extends Component{\n\n    state = { \n        movieRemoved: \"\"\n    }\n    \n    removeMovie = (movieID, movieName, movieYear) =>{\n        this.setState({\n            movieRemoved: movieName\n        }); \n\n        this.props.removeMovie(movieID, movieName, movieYear);\n\n        setTimeout(()=>{\n            this.setState({\n                movieRemoved: \"\"\n            });\n        }, 5000);\n    }\n    \n    render(){\n\n        let nominatedMovies = this.props.nominatedMovies;\n        return(\n    \n            <div className=\"nominations\">\n                <div className=\"nominations-container\">\n                    <h1 className=\"nominated-section-heading\">YOUR NOMINATIONS</h1>\n                    {this.state.movieRemoved && <h2 className=\"remove-notification\">You removed {this.state.movieRemoved}!</h2>}\n        \n                        <div className=\"nominated-movie-list\">\n                            {   \n                                nominatedMovies.map(movie =>\n                                    <div className=\"nominated-movie-item\">\n                                        <img src={movie[3]} alt={movie[3]}></img>\n                                        <h4 className=\"nominated-movies-details\" key={movie}>{movie[1]} ({movie[2]})</h4>\n                                        <button key={movie[0]} id={movie[1]} className=\"remove-button\" onClick={e => this.removeMovie(movie[0], movie[1], movie[2])}>Remove</button>\n                                    </div>\n                                )\n                            }\n                        </div>\n\n                        <button className=\"nominated-close-button\" onClick={this.props.showNominationsComponent}>Close</button>\n                </div>\n\n            </div>\n        \n\n        )\n    }\n}\n\nexport default Nominations;","import React, { Component } from 'react'; \nimport './addedNominationStyle.css'; \n\n\nclass AddedNominations extends Component{\n    render(){\n        return(\n            <div className=\"addedNominations\">\n\n                <div className=\"nominationsContainer\">\n                    \n                    <div className=\"sucessful-message\"> \n                        <h1 className=\"successful\">SUCCESSFULLY NOMINATED!</h1>\n                    </div>\n                    \n                    <div className=\"movie-container\">\n\n                        <div className=\"image-contianer\"> \n                            <img src={this.props.recentlyNominated[2]} alt={this.props.movieName}></img>\n                        </div>\n\n                        <div className=\"movie-details\">\n                            <h2>{this.props.recentlyNominated[0]}</h2>\n                            <h3>{this.props.recentlyNominated[1]}</h3>\n                            <button className=\"close-button\" onClick={this.props.closeNominationConfirmation}>Close</button>\n                        </div>\n\n                    </div>\n                    \n\n                </div>\n\n\n\n            </div>\n        )\n    }\n}\n\nexport default AddedNominations;","import React, { Component } from 'react';\nimport './App.css';\n\nimport Header from './Components/Header/header';\nimport Banner from './Components/Banner/banner';\nimport SearchBar from './Components/SearchBar/searchBar';\nimport Results from './Components/Results/results';\nimport Nominations from './Components/Nominations/nominations';\nimport AddedNominations from './Components/AddedNomination/addedNomination';\n\n\n//SEE IF ITS POSSIBLE TO BREAK UP THE CODE MORE SO NOT \n//ALL THE FUNCTIONS ARE IN THE SAME PLACE\n\nclass App extends Component{\n\n  state = {\n\n    movies: [], \n    nominatedMovies:[],\n    userSearch: \"\",\n    errorMessage: \"\",\n    showNominations: false,\n    maxmimumNominationsReached: false,\n    recentlyNominated: [],\n    totalPages: 0,\n    currentPage: 1,\n  }\n\n  componentDidMount(){\n\n    if(localStorage.getItem('nominatedMovies')){\n\n      this.setState({\n        nominatedMovies: JSON.parse(localStorage.getItem('nominatedMovies'))\n      });\n\n    }else{\n      localStorage.setItem('nominatedMovies', JSON.stringify([]));\n    }\n\n  }\n\n  showNominationsComponent = () =>{\n    this.setState(prevState =>{\n      return{\n        showNominations: !prevState.showNominations\n      }\n    });\n  }\n\n  nominationConfirmation = () =>{\n    let getComponent = document.getElementsByClassName('addedNominations')[0]; \n    getComponent.style.display = \"block\";\n  }\n\n  closeNominationConfirmation = () =>{\n    let getComponent = document.getElementsByClassName('addedNominations')[0]; \n    getComponent.style.display = \"none\";\n  }\n\n  nominateMovie = (movieImbdID, movieTitle, movieYear, moviePoster) =>{\n\n    if(this.state.nominatedMovies.length === 5){\n      \n        this.setState({\n          maxmimumNominationsReached: true\n        });\n        \n        setTimeout(()=>{\n          this.setState({\n            maxmimumNominationsReached: false\n          });\n        }, 3000);\n        \n    }else{\n\n        var updatednominatedMovies = [...this.state.nominatedMovies]; \n        updatednominatedMovies.push([movieImbdID, movieTitle, movieYear, moviePoster]); \n        \n        this.setState({\n            nominatedMovies: updatednominatedMovies, \n            recentlyNominated: [movieTitle, movieYear, moviePoster], \n        });\n\n\n        this.disableButton(movieImbdID);\n        localStorage.removeItem('nominatedMovies'); \n        localStorage.setItem('nominatedMovies', JSON.stringify(updatednominatedMovies));\n        this.nominationConfirmation(); \n\n\n    }\n  \n  }\n\n\n  removeMovie = (movieImbdID, movieTitle, movieYear) =>{\n\n      let nominatedMovies = [...this.state.nominatedMovies]; \n      let getIndexOfMovie = -1;\n      \n      for(let i = 0; i < nominatedMovies.length; i++){\n          if(nominatedMovies[i][0] === movieImbdID){\n              getIndexOfMovie = i;\n              break;\n          }\n      }\n      \n      nominatedMovies.splice(getIndexOfMovie, 1); \n\n      this.setState({\n          nominatedMovies: nominatedMovies\n      });\n    \n      \n      this.enableButton(movieImbdID);\n      localStorage.removeItem('nominatedMovies'); \n      localStorage.setItem('nominatedMovies', JSON.stringify(nominatedMovies));\n\n  }\n\n  disableButton = (buttonID) =>{\n    if(document.getElementById(buttonID)){\n      document.getElementById(buttonID).disabled = true;\n      document.getElementById(buttonID).style.backgroundColor = \"#3C333C\";\n      document.getElementById(buttonID).style.borderColor = \"#3C333C\";\n      document.getElementById(buttonID).style.color = \"white\";\n    }  \n  }\n\n  enableButton = (buttonID) =>{\n    if(document.getElementById(buttonID)){\n      document.getElementById(buttonID).disabled = false;\n      document.getElementById(buttonID).style.backgroundColor = \"#C4994D\"; \n      document.getElementById(buttonID).style.borderColor = \"#C4994D\";\n      document.getElementById(buttonID).style.color = \"#070605\";\n    }\n  }\n\n  getTotalResults = (totalResults) =>{\n    let intTotalResults = parseInt(totalResults);\n    let remainder = intTotalResults % 10; \n    let roundToTen = 10 - remainder; \n    let addBack = remainder + roundToTen; \n    let totalPages = intTotalResults - remainder + addBack; \n    this.setState({\n      totalPages: totalPages/10\n    })\n\n  }\n\n  updateMovies = (newMovies, userSearch) =>{\n\n    this.setState({\n      movies: newMovies,\n      userSearch: userSearch\n    });\n\n  }\n\n  updateErrorMessage = (newErrorMessage) =>{\n\n    this.setState({\n      errorMessage: newErrorMessage\n    });\n\n  }\n  \n  nextPage = () =>{\n    if(this.state.currentPage + 1 <= this.state.totalPages){\n      this.setState(prevState =>{\n        return{\n          currentPage: prevState.currentPage + 1\n        }\n      });\n    }\n  }\n\n  prevPage = () =>{\n    if(this.state.currentPage - 1 > 0){\n      this.setState(prevState =>{\n        return{\n          currentPage: prevState.currentPage -1 \n        }\n      });\n    }\n  }\n\n  resetCurrentPage = () =>{\n    this.setState({\n      currentPage: 1\n    })\n  }\n  \n  render(){\n\n    return(\n\n      <div className=\"App\">\n\n        <Header showNominations={this.showNominationsComponent} nominatedMovieslength={this.state.nominatedMovies.length}/>\n        {this.state.maxmimumNominationsReached && <Banner/>}\n        <SearchBar updateMovies={this.updateMovies} updateErrorMessage={this.updateErrorMessage} getTotalResults={this.getTotalResults} page={this.state.currentPage} resetCurrentPage={this.resetCurrentPage}/>\n        <Results movies={this.state.movies} userSearch={this.state.userSearch} nominateMovie={this.nominateMovie} errorMessage={this.state.errorMessage} nominatedMovies={this.state.nominatedMovies} currentPage={this.state.currentPage} totalPages={this.state.totalPages} prevPage={this.prevPage} nextPage={this.nextPage}/>\n        {this.state.showNominations && <Nominations nominatedMovies={this.state.nominatedMovies} removeMovie={this.removeMovie} showNominationsComponent={this.showNominationsComponent}/>}\n        <AddedNominations recentlyNominated={this.state.recentlyNominated} closeNominationConfirmation={this.closeNominationConfirmation}/>\n\n      </div>\n\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}